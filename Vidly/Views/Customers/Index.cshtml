@model Vidly.ViewModels.CustomerViewModel

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

<div style="border: black 1px solid; width: 40%; padding: 10px; position: fixed; right: 30px; top: 100px;">
    <p>View/edit customer data</p>
    <div id="partialholder" style="padding: 10px;">
    </div>
</div>
@Html.Hidden("clickedId", "", new { id = "hiddenId" })

@if (Model.Customers.Count > 0)
{
    <table class="table table-bordered table-hover" style= "width: 40%;">
        <tr>
            <th>Customer</th>
            <th>Membership Type</th>
        </tr>
        <tbody>

            @foreach (var item in Model.Customers)
            {
                <tr>
                    @*<td>@item.Name</td>
                        The last null parameter is needed for proper working......: *@
                    <td>
                        @*@Html.ActionLink(item.Name, "Details", "Customers", new { id = item.Id }, null)*@
                        @*@Html.ActionLink(item.Name, "DetailsToDiv", "Customers", new { id = item.Id }, null)*@
                        <button class="btn btn-primary checkclick" data-to-js="@item.Id">@item.Name</button>
                        <a href="#" class="edit_click" data-to-js="@item.Id">Edit</a>
                    </td>
                    <td>@item.MembershipType.Name</td>
                </tr>
            }

        </tbody>
    </table>
}
else
{
    <p>We have no customers yet!</p>
}



@section scripts
{
    <script>
        $(document).ready(function () {


            $(".checkclick").click(function () {
                var id = $(this).attr("data-to-js");
                $("#hiddenId").val(id);
                //console.log($("#hiddenId").val());
                var url = "/customers/DetailsToDiv/" + id;
                //$("#partialholder").load(url);
                $.ajax({
                    url: url,
                    success: function (resp) {
                        //console.log(resp);
                        $("#partialholder").html(resp);
                    }

                });
            });
            //$("#partialholder .editClick").click(function () {
            //    var id = $(this).attr("data-to-js");
            //    console.log("FFF");
            //});

        });
    </script>
}

@*@model Vidly.ViewModels.CustomerViewModel

    @{
        ViewBag.Title = "Index";
        Layout = "~/Views/Shared/_Layout.cshtml";
    }

    <h2>Customers</h2>

    <table id="customer-table" class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>Movie</th>
                <th>Genre</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody></tbody>
    </table>

    @section scripts
    {
        <script>
            $(document).ready(function () {
                // to make DataTable() work:
                //
                // in PM:
                // install - package jquery.datatables - version: 1.10.11
                //
                // in BundleConfig.cs:
                //
                //  bundles.Add(new ScriptBundle("~/bundles/lib").Include(
                //    "~/Scripts/jquery-{version}.js",
                //    "~/Scripts/bootstrap.js",
                //    "~/Scripts/bootbox.js",
                //    "~/Scripts/respond.js",
                // -> "~/Scripts/DataTables/jquery.dataTables.js",
                // -> "~/Scripts/DataTables/dataTables.bootstrap.js"));
                //
                // and
                //
                //  bundles.Add(new StyleBundle("~/Content/css").Include(
                //    "~/Content/bootstrap-lumen.css",
                // -> "~/Content/DataTables/css/dataTables.bootstrap.css",
                //    "~/Content/site.css"));
                //
                // a fully formed table is needed with <thead> and <tbody> tags !!!
                //
                // and this is needed in Views/Shared/_Layout.cshtml:
                //
                //

                //$('#movie-table').DataTable();

                var table = $('#customer-table').DataTable({
                ajax: {
                url: "/api/customers",
                dataSrc: ""
                },
                columns: [
                {
                data: "name",
                render: function(data, type, customer) {
                return "<a href='/customers/details/" + customer.id +"'>" + data + "</a>";
                }
                },
                {
                data: "membershipType.name"
                },
                {
                data: "id",
                render: function(data) {
                var res = "<a href='#' data-js-delete=" + data + " class='delete-link'>Delete</a>";
                res += " <a href='/customers/edit/" + data + "'>Edit</a>";
                return res;
                }
                }
                ]
                });

                // this line is problematic, because it generates as many event listener as many items we have -> it consumes more memory than it should
                // to prevent this, use the modified line!
                // $('#movie-table .delete-link').click(function () {
                // this way only one event listener is generated, on the movie-table!!
                // the second paramater of the on() function is a filter, so it will affect only .delete-link class elements

                $('#customer-table').on("click", ".delete-link", function () {
                var link_ = $(this);
                var id = link_.attr("data-js-delete");
                bootbox.confirm("Are you sure you want to delete this customer?", function (answer) {
                if (answer) {
                $.ajax({
                method: "DELETE",
                url: "/api/customers/" + id,
                success: function () {
                //link_.parents("tr").remove();
                table.row(link_.parents("tr")).remove().draw();
                }
                });
                }
                });
                });
                });
                </script>
                }*@
